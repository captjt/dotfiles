# .zshrc file with all of my ZSH configurations and settings.

export PATH=/usr/local/sbin:$PATH
export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=$HOME/.local/bin:$PATH

# Shortcut to this dotfiles path is $DOTFILES
export DOTFILES="$HOME/.dotfiles"

# Default editor.
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='subl'
fi

bindkey -e

eval "$(starship init zsh)"

# zsh_gcloud_account() {
#   local region zone color
#
#   color='%F{green}'
#
#   region="$(gcloud config get-value compute/region 2>/dev/null)"
#   zone="$(gcloud config get-value compute/zone 2>/dev/null)"
#
#   gcloud="${region}//${zone}"
#
#   echo -n "%{$color%}$LINUX_ICON $gcloud%{%f%}"
# }

# POWERLEVEL9K_CUSTOM_GCLOUD_ACCOUNT="zsh_gcloud_account"

# === Powerlevel9k theme settings ===
# Project page: https://github.com/bhilburn/powerlevel9k
# POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs kubecontext aws)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(pyenv command_execution_time)
# POWERLEVEL9K_RPROMPT_ON_NEWLINE=false
# POWERLEVEL9K_PROMPT_ON_NEWLINE=true
# POWERLEVEL9K_STATUS_VERBOSE=false
# POWERLEVEL9K_TIME_FORMAT='%D{%H:%M}'

export UPDATE_ZSH_DAYS=13
export HISTCONTROL=ignoreboth:erasedups
export LANG=en_US.UTF-8

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8'

# All of our zsh files
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

# Load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# Load antibody plugins
source ~/.zsh_plugins.sh

# Load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

# Load all completions after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

unset config_files updated_at

# Use .localrc for SUPER SECRET STUFF that you don't want in your public,
#  versioned repo.
# shellcheck disable=SC1090
[ -f ~/.localrc ] && . ~/.localrc
